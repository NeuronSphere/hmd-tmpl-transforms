{% from 'hmd-tmpl-transforms/_util/datatype_mapping.j2' import get_type -%}
{% from 'hmd-tmpl-transforms/_util/column_list.sql.j2' import column_list -%}

{%- macro prepare_source_select_cloumns(columns) %}
{%- for column in columns %}
{%- if '_' in column['definition']['name'] and '.' in column['definition']['name'] %}
{%- set row_name = column['definition']['name'].split('_')[1] %}
{%- else %}
{%- set row_name = column['definition']['name'] %}
{%- endif %}
{% if '.' in row_name %}{{ row_name }}{% else %}"{{ row_name }}"{% endif %} AS "{{ column['definition']['name'].replace('.', '_') }}",
{%- endfor -%}
{%- endmacro %}

INSERT INTO {% raw %}{{ ns_context['schema_name'] }}{% endraw %}_staging.{{name}}_{{version.replace('.', '_')}} (
    SELECT
      {{ prepare_source_select_cloumns(columns) }}
      {%- for p_col in header_overrides.partition_columns.keys() %}
      {{ '{{ ns_context["partition_values"]["' }}{{ p_col }}{{ '"] }}' }} AS "p_{{ p_col.replace('-', '_') }}"{{ ', ' if not loop.last else '' }}
      {%- endfor %}
    FROM {% raw %}{{ ns_context['schema_name'] }}{% endraw %}_source.{{ name }}_{{version.replace('.', '_')}}_{% raw %}{{ ns_context['table_suffix'].replace('-', '_') }}{% endraw %}
)